#############################
#   
#   WLCRS - Huawei Solar Integrattion - Combine multiple inverter values
#   See: https://github.com/wlcrs/huawei_solar/wiki/Connecting-to-daisy-chained-inverters
#
#   If your HA instance has a /homeasssistant/packages directory configured, this may be deployed by saving this text into a file
#   in that location. i.e.   /homeasssistant/packages/huawei_derived_sensors.yaml
#
#   Huawei Solar Setup: 1 x Inverter, 2 x LUNA ESS Batteries and 1 x Power/Consumption Meter
#
#
template:

########### Start: PV Strings - Power ###########

    # Inverter 1 - PV String 1  - Power. Calculated from current x voltage.
    # Referred to as PV1 on the SunSynk card.
  - sensor:
    - name: "Inverter 1 - PV 1 Power"
      unique_id: inverter_pv_1_power
      state_class: "measurement"
      device_class: power
      unit_of_measurement: "W"
      icon: mdi:solar-power
      state: >-
        {{ (states('sensor.inverter_pv_1_current')|float * states('sensor.inverter_pv_1_voltage')|float) }}
      availability: >-
        {{ (states('sensor.inverter_pv_1_current')|is_number)
            and (states('sensor.inverter_pv_1_voltage')|is_number) }}


    # Inverter 1 - PV String 2  - Power. Calculated from current x voltage.
    # Referred to as PV2 on the SunSynk card.
  - sensor:
    - name: "Inverter 1 - PV 2 Power"
      unique_id: inverter_pv_2_power
      state_class: "measurement"
      device_class: power
      unit_of_measurement: "W"
      icon: mdi:solar-power
      state: >-
        {{ (states('sensor.inverter_pv_2_current')|float * states('sensor.inverter_pv_2_voltage')|float) }}
      availability: >-
        {{ (states('sensor.inverter_pv_2_current')|is_number)
            and (states('sensor.inverter_pv_2_voltage')|is_number) }}


########### Start: Batteries - Combined values for 2 batteries ###########
#
#  Note: If you do NOT have two batteries, these sensors may cause your configuration to not load, due to yaml error
#        casued by the  sensor.battery_<entity_name>_2 not being detected.
#

  - sensor:
    - name: "Batteries - State of Capacity"
      unique_id: batteries_state_of_capacity
      unit_of_measurement: "%"
      device_class: "battery"
      state_class: measurement
      state: "{{ ((states('sensor.battery_state_of_capacity') | float) + (states('sensor.battery_state_of_capacity_2') | float)) | round(2)}}"
      availability: >-
        {{ (states('sensor.battery_state_of_capacity')|is_number)
            and (states('sensor.battery_state_of_capacity_2')|is_number) }}


  - sensor:
    - name: "Batteries - Charge Discharge Power"
      unique_id: batteries_charge_discharge_power
      unit_of_measurement: "W"
      device_class: "power"
      state_class: measurement
      state: "{{ (states('sensor.battery_charge_discharge_power') | float) + (states('sensor.battery_charge_discharge_power_2') | float) }}"
       availability: >-
         {{ (states('sensor.battery_charge_discharge_power')|is_number)
             and (states('sensor.battery_charge_discharge_power_2')|is_number) }}


  - sensor:
    - name: "Batteries - Day Charge"
      unique_id: batteries_day_charge
      unit_of_measurement: "kWh"
      device_class: "energy"
      state: "{{ (states('sensor.battery_day_charge') | float) + (states('sensor.battery_day_charge_2') | float) /2) }}"
       availability: >-
         {{ (states('sensor.battery_day_charge')|is_number)
             and (states('sensor.battery_day_charge_2')|is_number) }}


  - sensor:
    - name: "Batteries - Day Discharge"
      unique_id: batteries_day_discharge
      unit_of_measurement: "kWh"
      device_class: "energy"
      state: "{{ (states('sensor.battery_day_discharge') | float) + (states('sensor.battery_day_discharge_2') | float) /2) }}"
       availability: >-
         {{ (states('sensor.battery_day_discharge')|is_number)
             and (states('sensor.battery_day_discharge_2')|is_number) }}


  - sensor:
    - name: "Batteries - Charge/Discharge power"
      unique_id: 

  - sensor:
    - name: "Batteries - Bus Current"
      unique_id: sensor.batteries_bus_current

  - sensor:
    - name: "Batteries - Temperature"
      unique_id: sensor.batteries_temperature 

  - sensor:
    - name: "Batteries - Status"
      unique_id: sensor.batteries_status



#############################

  # Provides 'Daily Solar Yield' being the yield of your solar panels, minus any efficiency losses by the inverter
  # See: https://github.com/wlcrs/huawei_solar/wiki/Daily-Solar-Yield

#  This version works if you have an inverter and a LUNA ESS battery attached.
  - sensor:
    - name: "Inverter - Input Power with Efficiency Loss"
      unique_id: inverter_input_power_with_efficiency_loss
      unit_of_measurement: "W"
      device_class: power
      state_class: measurement
      state: >-
        {% set inverter_rating = 10000 %} {# adjust this value to the rated power of your inverter(s) #}
        {% set inpower = states('sensor.inverter_input_power')|float(0) %}
        {% if inpower < (inverter_rating*0.1) %}
          {{ inpower * 0.90 }}
        {% elif inpower < (inverter_rating*0.2) %}  
          {{ inpower * 0.95 }}
        {% else %}
          {{ inpower * 0.98 }}
        {% endif %}
      availability: >-
        {{ (states('sensor.inverter_input_power')|is_number) }}


########### Start: Power Meter - Calculates the Active Power being consumed in the house from grid, inveters & battery ###########

  # Provides the calculated current load, in Watts
  - sensor:
    - name: "House Consumption - Power"
      unique_id: house_consumption_power
      unit_of_measurement: "W"
      icon: mdi:solar-power
      device_class: "power"
      state_class: measurement
      state: >-
        {{ (states('sensor.inverter_active_power')|float -
            states('sensor.batteries_charge_discharge_power')|float -
            states('sensor.power_meter_active_power')|float) }}
      availability: >-
        {{ (states('sensor.inverters_active_power')|is_number)
            and (states('sensor.batteries_charge_discharge_power')|is_number)
              and (states('sensor.power_meter_active_power')|is_number) }}



########### Start: Helpers - Riemann Sum to conver Power (W) to Energy (kWh) ###########

  # Riemann Sum sensor to take "Inverters - Input Power with efficiency loss" and convert it into an ENERGY sensor.
sensor:
  - platform: integration
    name: "Inverter - Input Power - Energy"
    unique_id: inverter_input_power_energy
    source: sensor.inverter_input_power_with_efficiency_loss
    round: 3
    unit_prefix: k
    unit_time: h
    method: left


  # Riemann Sum sensor to take "House Consumption - Power" and convert it into ENERGY sensor.
  - platform: integration
    name: "House Consumption - Energy"
    unique_id: house_consumption_energy
    source: sensor.house_consumption_power
    round: 3
    unit_prefix: k
    unit_time: h
    method: left


########### Start: Energy Meter - Used to create sensors that track usage over a set period ###########

energy_meter:

  # Used to convert the above Riemann sum sensor into an ENERGY sensor that RESETS to ZERO DAILY. 
  house_consumption_energy_daily:
    unique_id: house_consumption_energy_daily
    name: "House Consumption - Energy - Daily"
    source: sensor.house_consumption_energy
    cycle: daily


######################### End of File #########################    