template:

#############################
#   
#   Sunsynk Power Flow Card - https://github.com/slipx06/sunsynk-power-flow-card
#   Derived sensors that are used upon the card
#

  # Sensor to show the Active Power for all the GPO's in the house, less the Network Rack and Fan, Servers and Study UPS sensors.
  # Used card entry: essential_load2
  - sensor:
    - name: "All GPO - Active Power Less Known"
      unique_id: all_gpo_active_power_less_known
      unit_of_measurement: "W"
      device_class: "power"
      state_class: measurement
      state: >-
        {% set gpo_total_active_power = states('sensor.all_gpo_active_power')|float(0) %}
        {% set all_it_active_power = states('sensor.it_hardware_active_power')|float(0) %}
        {% set whitegoods = states('sensor.dryer_energy_power')|float(0) %}
        {{ (gpo_total_active_power - ( all_it_active_power + whitegoods ))|float(0)|round(0) }}
      availability: >-
        {{ (states('sensor.all_gpo_active_power')|is_number)
            and (states('sensor.it_hardware_active_power')|is_number) 
              and (states('sensor.dryer_energy_power')|is_number) }}


  # Sensor to show the House Active Power Consumption less the sunsynk_power_flow  aux_active_power and non_essential_active_power sensors.
  # Used by card entry: essential_power
  - sensor:
    - name: "House Consumption - Power - Less Known"
      unique_id: house_consumption_power_less_known
      unit_of_measurement: "W"
      device_class: "power"
      state_class: measurement
      state: >-
        {% set house_consumption_active_power = states('sensor.house_consumption_power')|float(0) %}
        {% set aux_active_power = states('sensor.sunsynk_power_flow_aux_devices_active_power')|float(0) %}
        {% set non_essential_active_power = states('sensor.sunsynk_power_flow_non_essential_active_power')|float(0) %}
        {{ (house_consumption_active_power - ( aux_active_power + non_essential_active_power))|float(0)|round(0) }}
      availability: >-
        {{ (states('sensor.house_consumption_power')|is_number)
            and (states('sensor.sunsynk_power_flow_aux_devices_active_power')|is_number) 
              and (states('sensor.sunsynk_power_flow_non_essential_active_power')|is_number) }}


################################

energy_meter:

  # Used to convert the above Riemann sum sensor into an ENERGY sensor that RESETS to ZERO DAILY. 
  house_consumption_less_known_energy:
    unique_id: house_consumption_energy_meter_less_known
    name: "House Consumption - Energy Meter - Less Known"
    source: sensor.house_consumption_energy_less_known
    cycle: daily

  pdc_energy_imported_daily:
    unique_id: pdc_energy_imported_daily
    name: PDC - Energy Imported - Daily
    source: sensor.pdc_energy
    source_type: from_grid
    cycle: daily
    price_entity: &electricity-price sensor.electricity_price

  pdc_energy_imported_monthly:
    unique_id: pdc_energy_imported_monthly
    name: PDC Energy Imported - Monthly
    source: sensor.pdc_energy
    source_type: from_grid
    cycle: monthly
    price_entity: *electricity-price

  pdc_energy_imported_yearly:
    unique_id: pdc_energy_imported_yearly
    name: PDC Energy Imported - Yearly
    source: sensor.pdc_energy
    source_type: from_grid
    cycle: yearly
    price_entity: *electricity-price


########### Start: Helpers - Riemann Sum to conver Power (W) to Energy (kWh) ###########

  # Riemann Sum sensor to take "House Consumption Less Known - Power" and convert it into ENERGY sensor, 
  # this sensor is then used by the above energy_meter sensors.
sensor:
  - platform: integration
    name: "House Consumption - Energy - Less Known"
    unique_id: house_consumption_energy_less_known
    source: sensor.house_consumption_power_less_known
    round: 3
    unit_prefix: k
    unit_time: h
    method: left


######################### End of File #########################