
template:

#############################
#   
#   Sunsynk Power Flow Card - https://github.com/slipx06/sunsynk-power-flow-card
#   Derived sensors that are used upon the card
#

  # Sensor to show the Active Power for all the GPO's in the house, less the Network Rack and Fan, Servers and Study UPS sensors.
  # Used card entry: essential_load2
#  - sensor:
#    - name: "All GPO - Active Power Less Known"
#      unique_id: all_gpo_active_power_less_known
#      unit_of_measurement: "W"
#      device_class: "power"
#      state_class: measurement
#      state: >-
#        {% set gpo_total_active_power = states('sensor.all_gpo_active_power')|float(0) %}
#        {% set all_it_active_power = states('sensor.it_hardware_active_power')|float(0) %}
#        {% set whitegoods = states('sensor.dryer_energy_power')|float(0) %}
#        {{ (gpo_total_active_power - ( all_it_active_power + whitegoods ))|float(0)|round(0) }}
#      availability: >-
#        {{ (states('sensor.all_gpo_active_power')|is_number)
#            and (states('sensor.it_hardware_active_power')|is_number) 
#              and (states('sensor.dryer_energy_power')|is_number) }}


  # Sensor to show the House Active Power Consumption less the sunsynk_power_flow  aux_active_power and non_essential_active_power sensors.
  # Used by card entry: day_load_energy_84
  - sensor:
    - name: "House Consumption - Power - Less AUX Non-Essential"
      unique_id: house_consumption_power_less_aux_non_essential
      unit_of_measurement: "W"
      device_class: "power"
      state_class: measurement
      state: >-
        {% set house_consumption_active_power = states('sensor.house_consumption_power')|float(0) %}
        {% set aux_active_power = states('sensor.sunsynk_aux_active_power')|float(0) %}
        {% set non_essential_active_power = states('sensor.sunsynk_non_essential_active_power')|float(0) %}
        {{ (house_consumption_active_power - ( aux_active_power + non_essential_active_power))|float(0)|round(0) }}
      availability: >-
        {{ (states('sensor.house_consumption_power')|is_number)
            and (states('sensor.sunsynk_aux_active_power')|is_number) 
              and (states('sensor.sunsynk_non_essential_active_power')|is_number) }}


#############################
#   
#   Template sensors to provide an alias sensor to save calling the long strange entity ID names
#   that Serbat has in his HA installation
#

template:
  # First Floor - Active Power
  # Used card entry: N/A
  – sensor:
    - name: "Floor Comune - Active Power"
      unique_id: floor_comune_active_power
      device_class: power
      state_class: measurement
      unit_of_measurement: W
      state: >-
        {{ states('sensor.0x000474000085385c_power')|float(0)}}

  # Second Floor - Active Power
  # Used card entry: aux_load1  
  – sensor:
    - name: "Floor Gianna - Active Power"
      unique_id: floor_gianna_active_power
      device_class: power
      state_class: measurement
      unit_of_measurement: "W"
      state: >-
        {{ states('sensor.0x0004740000827524_power')|float(0)}}

  # Third Floor - Active Power
  # Used card entry: aux_load2  
  – sensor:
    - name: "Floor Patty - Active Power"
      unique_id: floor_patty_active_power
      device_class: power
      state_class: measurement
      unit_of_measurement: "W"
      state: >-
        {{ states('sensor.0x0004740000926d8b_power')|float(0)}}

  # Heat Pump (PDC) - Active Power
  # Used card entry: non_essential_load1  
  – sensor:
    - name: "PDC - Active Power"
      unique_id: pdc_active_power
      device_class: power
      state_class: measurement
      unit_of_measurement: "W"
      state: >-
        {{ (states('sensor.0x0004740000a15eb2_power') | float)
         + (states('sensor.0x0004740000a15ec7_power') | float) 
         + (states('sensor.0x0004740000a15f60_power') | float) }}"
      availability: >-
        {{ (states('sensor.0x0004740000a15eb2_power')|is_number)
            and (states('sensor.0x0004740000a15ec7_power')|is_number)
              and (states('sensor.0x0004740000a15f60_power')|is_number)}}


################################

energy_meter:

  # Used to convert the above Riemann sum sensor into an ENERGY sensor that RESETS to ZERO DAILY. 
  # Used card entry:  
  house_consumption_energy_meter_less_aux_non_essential:
    unique_id: house_consumption_energy_meter_less_aux_non_essential
    name: "House Consumption - Energy Meter - Less AUX Non-Essential"
    source: sensor.house_consumption_energy_less_aux_non_essential
#    source_type: from_grid
    cycle: daily
#    price_entity: &electricity-price 


  # Used card entry:  day_aux_energy
  sunsynk_aux_kwh_daily:
    unique_id: sunsynk_aux_kwh_daily
    name: "Sunsynk - AUX - kWh Daily"
    source: sensor.sunsynk_aux_energy
    cycle: daily
#    source_type: from_grid
#    cycle: daily
#    price_entity: &electricity-price 


#  pdc_energy_imported_daily:
#    unique_id: pdc_energy_imported_daily
#    name: PDC - Energy Imported - Daily
#    source: sensor.pdc_energy
#    source_type: from_grid
#    cycle: daily
#    price_entity: &electricity-price sensor.electricity_price


#  pdc_energy_imported_monthly:
#    unique_id: pdc_energy_imported_monthly
#    name: PDC Energy Imported - Monthly
#    source: sensor.pdc_energy
#    source_type: from_grid
#    cycle: monthly
#    price_entity: *electricity-price


#  pdc_energy_imported_yearly:
#    unique_id: pdc_energy_imported_yearly
#    name: PDC Energy Imported - Yearly
#    source: sensor.pdc_energy
#    source_type: from_grid
#    cycle: yearly
#    price_entity: *electricity-price


########### Start: Helpers - Riemann Sum to conver Power (W) to Energy (kWh) ###########

  # Riemann Sum sensor to take "House Consumption Less Known - Power" and convert it into ENERGY sensor, 
  # this sensor is then used by the above energy_meter sensors.

  # Used card entry:  essential_power
sensor:
  - platform: integration
    name: "House Consumption - Energy - Less AUX Non-Essential"
    unique_id: house_consumption_energy_less_aux_non_essential
    source: sensor.house_consumption_power_less_aux_non_essential
    round: 3
    unit_prefix: k
    unit_time: h
    method: left

  # Used card entry:  N/A - Converts W to kWh. Used to feed sunsynk_aux_kwh_daily 
sensor:
  - platform: integration
    name: "Sunsynk - AUX - Energy"
    unique_id: sunsynk_aux_energy
    source: sensor.sunsynk_aux_active_power
    round: 3
    unit_prefix: k
    unit_time: h
    method: left


  #########################
  #
  # GROUPS - Used to sum up the Active Power or kWh (Energy) used by a number of sensors.
  #          This information then allows adding/subtracting it from other groups to derive
  #          the Active Power Watts or kWh used by the AUX / Non-Essential / Essential areas of the card.

  # AUX Devices - Active Power - Gives the sum total of Gianna and Patty
  # Used card entry:  
  - platform: group
    name: Sunsynk - AUX - Active Power
    unique_id: sunsynk_aux_active_power
    unit_of_measurement: "W"
    device_class: power
#    state_class: measurement
    type: sum
    entities:
      - sensor.floor_gianna_active_power
      - sensor.floor_patty_active_power


# Non Essential Devices - Active Power - Gives the sum total of Heat Pump (PDC) & EV Charger
  - platform: group
    name: Sunsynk - Non Essential - Active Power
    unique_id: sunsynk_non_essential_active_power
    unit_of_measurement: "W"
    device_class: power
#    state_class: measurement
    type: sum
    entities:
      - sensor.pdc_active_power
#      - sensor.ev_charger_active_power

        
######################### End of File #########################
